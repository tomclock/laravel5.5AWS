{"filter":false,"title":"BooksController.php","tooltip":"/cms/app/Http/Controllers/BooksController.php","undoManager":{"mark":19,"position":19,"stack":[[{"start":{"row":0,"column":0},"end":{"row":10,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers;","","use Illuminate\\Http\\Request;","","class BooksController extends Controller","{","    //","}",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":64,"column":1},"action":"insert","lines":["","<?php","","namespace App\\Http\\Controllers;","use Illuminate\\Http\\Request;","","","//使うClassを宣言:自分で追加","use App\\Book;   //Bookモデルを使えるようにする","use Validator;  //バリデーションを使えるようにする","use Auth;       //認証モデルを使用する","","class BooksController extends Controller","{","    //更新","    public function update(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","            'id' => 'required',","            'item_name' => 'required|min:3|max:255',","            'item_number' => 'required|min:1|max:3',","            'item_amount' => 'required|max:6',","            'published' => 'required',","        ]); ","        //バリデーション:エラー ","        if ($validator->fails()) {","            return redirect('/')","                ->withInput()","                ->withErrors($validator);","        }","        ","        // データ更新","        $books = Book::find($request->id);","        $books->item_name   = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published   = $request->published;","        $books->save();","        return redirect('/');","    }","    //登録","    public function store(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","                'item_name' => 'required|min:3|max:255',","                'item_number' => 'required|min:1|max:3',","                'item_amount' => 'required|max:6',","                'published' => 'required',","        ]);","        //バリデーション:エラー ","        if ($validator->fails()) {","                return redirect('/')","                    ->withInput()","                    ->withErrors($validator);","        }","        // Eloquentモデル（登録処理）","        $books = new Book;","        $books->item_name = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published = $request->published;","        $books->save();","        return redirect('/');","    }","}"]}],[{"start":{"row":0,"column":0},"end":{"row":64,"column":1},"action":"remove","lines":["","<?php","","namespace App\\Http\\Controllers;","use Illuminate\\Http\\Request;","","","//使うClassを宣言:自分で追加","use App\\Book;   //Bookモデルを使えるようにする","use Validator;  //バリデーションを使えるようにする","use Auth;       //認証モデルを使用する","","class BooksController extends Controller","{","    //更新","    public function update(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","            'id' => 'required',","            'item_name' => 'required|min:3|max:255',","            'item_number' => 'required|min:1|max:3',","            'item_amount' => 'required|max:6',","            'published' => 'required',","        ]); ","        //バリデーション:エラー ","        if ($validator->fails()) {","            return redirect('/')","                ->withInput()","                ->withErrors($validator);","        }","        ","        // データ更新","        $books = Book::find($request->id);","        $books->item_name   = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published   = $request->published;","        $books->save();","        return redirect('/');","    }","    //登録","    public function store(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","                'item_name' => 'required|min:3|max:255',","                'item_number' => 'required|min:1|max:3',","                'item_amount' => 'required|max:6',","                'published' => 'required',","        ]);","        //バリデーション:エラー ","        if ($validator->fails()) {","                return redirect('/')","                    ->withInput()","                    ->withErrors($validator);","        }","        // Eloquentモデル（登録処理）","        $books = new Book;","        $books->item_name = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published = $request->published;","        $books->save();","        return redirect('/');","    }","}"],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":87,"column":0},"action":"insert","lines":["","<?php","namespace App\\Http\\Controllers;","use Illuminate\\Http\\Request;","","","//使うClassを宣言:自分で追加","use App\\Book;   //Bookモデルを使えるようにする","use Validator;  //バリデーションを使えるようにする","use Auth;       //認証モデルを使用する","","class BooksController extends Controller","{","    //本ダッシュボード表示","    public function index() {","        $books = Book::orderBy('created_at', 'asc')->get();","        return view('books', [","            'books' => $books","        ]);","    }","    ","    //更新画面","    public function edit(Book $books) {","        return view('booksedit', [","            'book' => $books","        ]);","    }","    ","    //更新","    public function update(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","            'id' => 'required',","            'item_name' => 'required|min:3|max:255',","            'item_number' => 'required|min:1|max:3',","            'item_amount' => 'required|max:6',","            'published' => 'required',","        ]); ","        //バリデーション:エラー ","        if ($validator->fails()) {","            return redirect('/')","                ->withInput()","                ->withErrors($validator);","        }","        ","        //データ更新","        $books = Book::find($request->id);","        $books->item_name   = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published   = $request->published;","        $books->save();","        return redirect('/');","    }","    ","    //登録","    public function store(Request $request) {","        //バリデーション","        $validator = Validator::make($request->all(), [","                'item_name' => 'required|min:3|max:255',","                'item_number' => 'required|min:1|max:3',","                'item_amount' => 'required|max:6',","                'published' => 'required',","        ]);","        //バリデーション:エラー ","        if ($validator->fails()) {","                return redirect('/')","                    ->withInput()","                    ->withErrors($validator);","        }","        //Eloquentモデル（登録処理）","        $books = new Book;","        $books->item_name = $request->item_name;","        $books->item_number = $request->item_number;","        $books->item_amount = $request->item_amount;","        $books->published = $request->published;","        $books->save();","        return redirect('/');","    }","        ","    //削除処理","    public function destroy(Book $book) {","        $book->delete();","        return redirect('/');","    }","    ","}",""],"id":4}],[{"start":{"row":12,"column":1},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]},{"start":{"row":13,"column":4},"end":{"row":14,"column":0},"action":"insert","lines":["",""]},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":13,"column":4},"end":{"row":18,"column":0},"action":"insert","lines":["   //コンストラクタ （このクラスが呼ばれたら最初に処理をする）","    public function __construct()","    {","        $this->middleware('auth');","    }",""],"id":6}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"remove","lines":["    "],"id":7}],[{"start":{"row":22,"column":59},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":23,"column":0},"end":{"row":23,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":23,"column":8},"end":{"row":24,"column":93},"action":"insert","lines":[""," $books = Book::where('user_id',Auth::user()->id)->orderBy('created_at', 'asc')->paginate(3);"],"id":9}],[{"start":{"row":24,"column":1},"end":{"row":24,"column":4},"action":"insert","lines":["   "],"id":10}],[{"start":{"row":24,"column":4},"end":{"row":24,"column":8},"action":"insert","lines":["    "],"id":11}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"insert","lines":["    "],"id":12},{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":22,"column":4},"end":{"row":23,"column":12},"action":"remove","lines":["        $books = Book::orderBy('created_at', 'asc')->get();","            "],"id":13},{"start":{"row":22,"column":0},"end":{"row":23,"column":12},"action":"insert","lines":["        $books = Book::orderBy('created_at', 'asc')->get();","            "]}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":14},"action":"remove","lines":["        $books = Book::orderBy('created_at', 'asc')->get();","              "],"id":14},{"start":{"row":21,"column":29},"end":{"row":22,"column":2},"action":"remove","lines":["","  "]}],[{"start":{"row":78,"column":26},"end":{"row":79,"column":0},"action":"insert","lines":["",""],"id":15},{"start":{"row":79,"column":0},"end":{"row":79,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":79,"column":8},"end":{"row":79,"column":53},"action":"insert","lines":["$books->user_id  = Auth::user()->id; //追加のコード"],"id":16}],[{"start":{"row":53,"column":0},"end":{"row":53,"column":42},"action":"remove","lines":["        $books = Book::find($request->id);"],"id":17},{"start":{"row":53,"column":0},"end":{"row":53,"column":69},"action":"insert","lines":["$books = Book::where('user_id',Auth::user()->id)->find($request->id);"]}],[{"start":{"row":53,"column":0},"end":{"row":53,"column":4},"action":"insert","lines":["    "],"id":18}],[{"start":{"row":53,"column":4},"end":{"row":53,"column":8},"action":"insert","lines":["    "],"id":19}],[{"start":{"row":29,"column":0},"end":{"row":33,"column":5},"action":"remove","lines":["    public function edit(Book $books) {","        return view('booksedit', [","            'book' => $books","        ]);","    }"],"id":20},{"start":{"row":29,"column":0},"end":{"row":34,"column":1},"action":"insert","lines":["public function edit($book_id){","    $books = Book::where('user_id',Auth::user()->id)->find($book_id);","    return view('booksedit', [","        'book' => $books","    ]);","}"]}],[{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"insert","lines":["    "],"id":21},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"insert","lines":["    "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"insert","lines":["    "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"insert","lines":["    "]}]]},"ace":{"folds":[],"scrolltop":300,"scrollleft":0,"selection":{"start":{"row":16,"column":29},"end":{"row":16,"column":29},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":20,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1616023050557,"hash":"3291ddc6327f99a73c319b049fd56785c347a9ea"}